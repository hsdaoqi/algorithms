//知识区
1.
x=b^p,求最大的p
有唯一分解定理x=p1^a1*p2^a2....pn^an,则p=gcd(a1,a2,....an);
若x为负数，p一定为奇数，所以求出来的p若为偶数，则要不断除2，知道p为奇数

2.
求n!中可以分解出几个x
int ans=0;
while(n){
 ans+=n/x;
 n/=x;
}

3.
一个数组内的元素两两相乘之和，等于(元素之和的平方-元素平方之和)/2；

4.
欧拉定理：if gcd(a,m)==1,则a^phi[m]%m=1
扩展欧拉定理：a^b --> if(b<phi[m]) a^b%m=a^b%m, if(b>=phi[m])则 a^b=(a^(b%phi[m]+phi[m]))%m;

5.
威尔逊定理：(p-1)!  == -1(mod p)是p为质数的充分必要条件
	推论 若p是质数则，(p-1)! + 1 = 0(mod p)
	若p是大于四的合数，则(p-1)! = 0(mod p)

6. 环染色问题：
	n个节点的环，一共有k中颜色，相邻两节点的颜色不能相同，一共有多少种方法染色：(k-1)^n+(-1)^n*(k-1);
	polya定理 ：用m种颜色给n元环染色的方案数为：(for(k,1,n) m^gcd(k,n))/n!


7.中点相同可以构成平行四边形  
	  /\
        /    \
        \    /
	  \/
-----------------------------------

8.错排递推式 dp[i]=(i-1)*(dp[i-1]+dp[i-2])(n>2)  错排指每个数都不在自己位置上的方案数，dp[1]=0,dp[2]=dp[0]=1;

9.卡特兰数  Hn = C(2n , n)-C(2n , n-1) = C(2n , n)/(n+1) = (4n-2)*Hn-1/(n+1)

10第二类斯特林数
	n个不同小球，m个相同盒子，没有空
	sum=0;
	for(int i=0;i<=m;i++){
        	sum+=((i)&1?-1:1)*comb.C(m,i)*power(m-i,n);
   	 }
	sum /=m!;
	动态规划：
	dp[n][m]=dp[n-1][m]*m+dp[n-1][m-1];


11曼哈顿距离转化为切比雪夫距离
	(x1,y1),(x2,y2)-->(x1+y1,y1-x1),(x2+y2,y2-x2)--->(x1`,y1`),(x2`,y2`),
	两点之间距离为abs(x1-x2)+abs(y1-y2)=max(abs(x1`-x2`),abs(y1`-y2`))

12 可以得到判断正整数 n 是否可以表示成 k 个连续正整数之和的方法：
如果 k 是奇数，则当 n 可以被 k 整除时，正整数 n 可以表示成 k 个连续正整数之和；
如果 k 是偶数，则当 n 不可以被 k 整除且 2n 可以被 k 整除时，正整数 n 可以表示成 k 个连续正整数之和。

13.小球放盒问题
	1. 有n个相同的球，k个不同的盒子，把n个球放到盒子里，盒子不允许为空，有多少种方案。
	这个问题等价于求n=a1+a2+a3+...ak ,ai不能为0的方案数。隔板法，插空法。
	把n个相同的球放在一行，那么这n个球中间有n-1个空，那么在这n-1个空中选k-1个空，放k-1个隔板，就把这n个球分成了k份。
	所以方案数为C(n-1,k-1)  , 组合数公式，表示从n-1个取k-1个的方案数。
	例题: 牛客网 https://ac.nowcoder.com/acm/contest/553/D

	2. 有n个相同的球，k个不同的盒子，把n个球放到盒子里，盒子允许为空，有多少种方案。
	和问题1方法一样，这个允许盒子为空。n=a1+a2+a3+...ak ,ai可以为0的方案数。
	这个题等价于 有n+k个相同的球，k个不同盒子，盒子不许为空的方案数。
	因为：把这n+k个球分到k个盒子之后，把每个盒子里的球的数量都减一，那么球的总数就是n个了，盒子里的球就可能是空的了。
	所以方案数为 C（n+k-1,k-1）.     例题: 牛客网 https://ac.nowcoder.com/acm/contest/553/D

	3. 有n个相同的球，k个相同的盒子，把n个球放到盒子里，盒子允许为空，有多少种方案。
	这是一道动态规划题，用dp[i][j]表示把n个球放到不超过k个盒子里的方案数。我们可以根据有没有空盒子列出下面这个转移方程：
	dp[i][j]=dp[i][j-1]+dp[i-j][j]   ,解释一下：dp[i][j-1] 表示有空盒子，那么就是i个球放到不超过j-1个盒子的方案数
	dp[i-j][j] 表示没有空盒子，那么每个盒子最少要有1个球，那么先把每个盒子放一个球，还剩下i-j个球，把剩下的i-j个球分到不超过j个盒子。

	4. 有n个相同的球，k个相同的盒子，把n个球放到盒子里，盒子不允许为空，有多少种方案。
	和第3个方法一样，也是动态规划，dp[i][j]表示的意义和第3题一样。答案应该是 dp[n][k]-dp[n][k-1].
	显然，（n个球放到k个相同的盒子，盒子允许为空的方案数）减去（n个球放到k-1个盒子，盒子允许为空的方案数）就是 （n个球放到k个盒子，盒子不允许为空的方案数）。

	5. 有n个不同的球，k个相同的盒子，把n个球放到盒子里，盒子不允许为空，有多少种方案。
	这个题是第二类Stirling数，用S（n,k）表示n个不同的球，放到k个不同的盒子，盒子不允许为空的方案数。
	那么 S(n,k)=S（n-1,k-1）+k*S(n-1,k)    1<=k<=n  S(0,0)=1,S(i,0)=0
	解释一下怎么理解这个状态转移方程，第n个球可以有两种状态，第n个球单独在一个盒子里，第n个球所在盒子至少有两个。
	S(n-1,k-1) 就是第n个球单独在一个盒子里，那么就剩n-1个不同球，分到剩下的k-1个盒子里。
	k*S(n-1,k) ：先把前i-1个分配到k个盒子里，方案数是S(n-1,k) ，第n个球然后就有k种方法，总方案数就是k*S(n-1,k)
	dp打出一个二维数组的表，就能算出答案

	6. 有n个不同的球，k个相同的盒子，把n个球放到盒子里，盒子允许为空，有多少种方案。和第5题方法一样，答案就是 S(n,1)+S(n,2)+.....S(n,k)

	7. 有n个不同的球，k个不同的盒子，把n个球放到盒子里，盒子不允许为空，有多少种方案。和第5题的区别是盒子不同，那么答案就是 S(n,k)*k!
	
	8. 有n个不同的球，k个不同的盒子，把n个球放到盒子里，盒子允许为空，有多少种方案。k的n次方，每个球都有k中选择。

14 [l,r]内的两两不同的数相或的最小值，如果区间最大值<=2^(k),那么必然是区间内最小的(k+1)个数相或的结果

